apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sparkflows.fullname" . }}
  labels:
    {{- include "sparkflows.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sparkflows.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sparkflows.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sparkflows.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      
      volumes:
        - name: dind-storage
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: sparkflows-db-secret
          env:
          - name: DB
            value: "mysql"
          - name: DOCKER_HOST
            value: tcp://localhost:2376  
          - name: DOCKER_TLS_VERIFY
            value: "1"
          - name: DOCKER_CERT_PATH
            value: /usr/local/docker

          volumeMounts:
          - name: app-secret-volume
            readOnly: false
            mountPath: /usr/local/mnt

          volumeMounts:
            - name: dind-storage
              mountPath: /usr/local/docker
          
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 80
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: dind
          image: docker:24.0.0-rc.1-dind
          name: {{ .Chart.Name }}-dind
          securityContext:
            privileged: true
          volumeMounts:
            - name: dind-storage
              mountPath: /certs/client
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
